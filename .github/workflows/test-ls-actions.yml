name: test-ls-actions
run-name: ${{ github.actor }} LS-NEXT test
on: [push]
jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ghcr.io/rodriguemrt/testci-cd/web:latest
          labels: latest
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - run: npm install
  #     - run: ls
  #     - run: npm run build

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - run: npm run e2e:headless
  #     - run: ls
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: e2e-video
  #         path: cypress\videos\

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules/home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  #     - name: Set up SSH
  #       uses: webfactory/ssh-agent@v0.8.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #     - name: SSH into EC2 instance
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "ls"
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd TestCI-CD && git pull"
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd TestCI-CD && npm run build"
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd TestCI-CD && pm2 start npm --name "TestCICD" -- start "
