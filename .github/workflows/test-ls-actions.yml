name: test-ls-actions
run-name: ${{ github.actor }} LS-NEXT test
on: [push]
jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - run: npm install
  #     - run: ls
  #     - run: npm run build

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - run: npm run e2e:headless
  #     - run: ls
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: e2e-video
  #         path: cypress\videos\

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            node_modules/home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: SSH into EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "ls"
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd TestCI-CD && pm2 start npm --name "TestCICD" -- start "
